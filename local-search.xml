<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>calculo</title>
    <link href="/hexo-port/hexo-port/"/>
    <url>/hexo-port/hexo-port/</url>
    
    <content type="html"><![CDATA[<h3 id="Alogoritimos-de-busca-binaria"><a href="#Alogoritimos-de-busca-binaria" class="headerlink" title="Alogoritimos de busca binaria"></a>Alogoritimos de busca binaria</h3><h4 id="Bubble-Sorte"><a href="#Bubble-Sorte" class="headerlink" title="Bubble Sorte"></a>Bubble Sorte</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">bubble_sort</span>(<span class="hljs-params">arr</span>):<br>    n = <span class="hljs-built_in">len</span>(arr)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, n-i-<span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">if</span> arr[j] &gt; arr[j+<span class="hljs-number">1</span>]:<br>                arr[j], arr[j+<span class="hljs-number">1</span>] = arr[j+<span class="hljs-number">1</span>], arr[j]<br>arr = [<span class="hljs-number">64</span>, <span class="hljs-number">34</span>, <span class="hljs-number">25</span>, <span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">11</span>, <span class="hljs-number">90</span>]<br>bubble_sort(arr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Array ordenado pelo Bubble Sort:&quot;</span>, arr)<br><br></code></pre></td></tr></table></figure><h4 id="Selection-Sort"><a href="#Selection-Sort" class="headerlink" title="Selection_Sort"></a>Selection_Sort</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">selection_sort</span>(<span class="hljs-params">arr</span>):<br>    n = <span class="hljs-built_in">len</span>(arr)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        min_idx = i<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i+<span class="hljs-number">1</span>, n):<br>            <span class="hljs-keyword">if</span> arr[j] &lt; arr[min_idx]:<br>                min_idx = j<br>        arr[i], arr[min_idx] = arr[min_idx], arr[i]<br><br>arr = [<span class="hljs-number">64</span>, <span class="hljs-number">34</span>, <span class="hljs-number">25</span>, <span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">11</span>, <span class="hljs-number">90</span>]<br>selection_sort(arr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Array ordenado pelo Selection Sort:&quot;</span>, arr)<br><br></code></pre></td></tr></table></figure><h4 id="Insertion-Sort"><a href="#Insertion-Sort" class="headerlink" title="Insertion Sort"></a>Insertion Sort</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">insertion_sort</span>(<span class="hljs-params">arr</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(arr)):<br>        key = arr[i]<br>        j = i-<span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> j &gt;=<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> key &lt; arr[j] :<br>                arr[j+<span class="hljs-number">1</span>] = arr[j]<br>                j -= <span class="hljs-number">1</span><br>        arr[j+<span class="hljs-number">1</span>] = key<br><br>arr = [<span class="hljs-number">64</span>, <span class="hljs-number">34</span>, <span class="hljs-number">25</span>, <span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">11</span>, <span class="hljs-number">90</span>]<br>insertion_sort(arr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Array ordenado pelo Insertion Sort:&quot;</span>, arr)<br><br></code></pre></td></tr></table></figure><h4 id="Merge-Sort"><a href="#Merge-Sort" class="headerlink" title="Merge Sort"></a>Merge Sort</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">merge_sort</span>(<span class="hljs-params">arr</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(arr) &gt; <span class="hljs-number">1</span>:<br>        mid = <span class="hljs-built_in">len</span>(arr)//<span class="hljs-number">2</span><br>        L = arr[:mid]<br>        R = arr[mid:]<br><br>        merge_sort(L)<br>        merge_sort(R)<br><br>        i = j = k = <span class="hljs-number">0</span><br><br>        <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(L) <span class="hljs-keyword">and</span> j &lt; <span class="hljs-built_in">len</span>(R):<br>            <span class="hljs-keyword">if</span> L[i] &lt; R[j]:<br>                arr[k] = L[i]<br>                i += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                arr[k] = R[j]<br>                j += <span class="hljs-number">1</span><br>            k += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(L):<br>            arr[k] = L[i]<br>            i += <span class="hljs-number">1</span><br>            k += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">while</span> j &lt; <span class="hljs-built_in">len</span>(R):<br>            arr[k] = R[j]<br>            j += <span class="hljs-number">1</span><br>            k += <span class="hljs-number">1</span><br><br>arr = [<span class="hljs-number">64</span>, <span class="hljs-number">34</span>, <span class="hljs-number">25</span>, <span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">11</span>, <span class="hljs-number">90</span>]<br>merge_sort(arr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Array ordenado pelo Merge Sort:&quot;</span>, arr)<br>a<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>anki</title>
    <link href="/hexo-port/hexo-port/"/>
    <url>/hexo-port/hexo-port/</url>
    
    <content type="html"><![CDATA[<p><a href="http://159.112.179.106/">Anki</a> foi um projeto desenvoldio por, Caio Sumizawa, Eduardo Henrique Duarte de Araujo, Gabriel Furlam Costa, Gustavo Cardoso Tellese e João Pedro Camargo Borsoi, como objetivo de ajudar pessoas que estão começando a aprender japones, tá funcinando ainda </p><p>O projeto foi desenvolvido usando html, css e JavaScript e sendo ospedado em uma maquina oracle.<br><a href="https://github.com/CaioSumizawa1/Projeto-de-Extensao-Curricular-Japones-Para-Todos">GitHub do projeto</a></p><img src="/hexo-port/hexo-port/Home.png" class=""> <img src="/hexo-port/hexo-port/katakana.png" class=""> <img src="/hexo-port/hexo-port/hiragana.png" class=""> <p>Caso você queria testa o projeto vc pode <a href="http://159.112.179.106/">clicar aqui.</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
